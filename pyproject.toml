[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["haghighi_mito*"]

[project]
name = "2025-haghighi-mito"
version = "0.1.0"
description = "Mitochondrial morphology virtual screen analysis"
authors = [{name = "Shantanu Singh", email = "shsingh@broadinstitute.org"}]
requires-python = ">= 3.12"

[project.scripts]
haghighi-mito = "haghighi_mito.cli:main"

# Pixi configuration
[tool.pixi.workspace]
channels = ["conda-forge", "bioconda"]
platforms = ["linux-64"]

[tool.pixi.dependencies]
# Core Python environment
python = "3.12.*"

# Scientific computing stack
numpy = ">=2.3.0"
pandas = ">=2.2.0"
scipy = ">=1.14.0"
matplotlib = ">=3.9.0"
seaborn = ">=0.13.0"
scikit-learn = ">=1.5.0"
statsmodels = ">=0.14.0"
polars = ">=1.34.0"

# Data formats and databases
openpyxl = ">=3.1.0"
duckdb = ">=1.4.0"
sqlalchemy = ">=2.0.0"
sqlglot = ">=27.27.0"

# Workflow and utilities
snakemake = ">=9.0.0"
loguru = ">=0.7.3"
python-dotenv = ">=1.1.1"
typer = ">=0.9.0"

# Analysis packages
anthropic = ">=0.71.0"
blitzgsea = ">=1.3.40"
hdmedians = ">=0.14.2"
scienceplots = ">=2.1.1"

[tool.pixi.feature.jupyter.dependencies]
ipykernel = ">=7.0.0"
jupyter = ">=1.1.0"
jupytext = ">=1.17.0"
jupyterlab = ">=4.0.0"

[tool.pixi.feature.marimo.dependencies]
marimo = ">=0.17.0"

[tool.pixi.feature.dev.dependencies]
pytest = ">=8.4.0"
ruff = "*"

[tool.pixi.environments]
default = { features = ["jupyter", "marimo"], solve-group = "default" }
minimal = { features = [], solve-group = "default" }
dev = { features = ["jupyter", "marimo", "dev"], solve-group = "default" }

[tool.pixi.pypi-dependencies]
# Local package (editable install)
2025-haghighi-mito = { path = ".", editable = true }

# Git sources (fully supported in pixi+uv backend)
singlecell-morph = { git = "https://github.com/shntnu/SingleCell_Morphological_Analysis.git" }

[tool.pixi.tasks]
# Common tasks
jupyter = "jupyter lab"
test = "pytest"
lint = "ruff check ."
fmt = "ruff format ."

[tool.ruff]
line-length = 300
target-version = "py312"

[tool.ruff.lint]
# Enable common linting rules
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]

# Ignore specific rules that are common in notebooks
ignore = [
    "E402",  # Module level import not at top of file (common in notebooks)
    "E703",  # Statement ends with semicolon (used in notebooks to suppress output)
    "F401",  # Imported but unused (common in notebooks with cells)
    "F841",  # Local variable assigned but never used
    "N816",  # Variable name should be lowercase (common in notebooks)
    "N806",  # Variable in function should be lowercase (common in notebooks)
    "N802",  # Function name should be lowercase (common in notebooks)
    "N803",  # Argument name should be lowercase (common in notebooks)
    "B018",  # Found useless expression. (common in notebooks)
    "N817",  # 
    "SIM108",  # Use ternary operator instead of if-else statement (common in notebooks)
]

[tool.ruff.lint.per-file-ignores]
# Ignore all import-related issues in notebooks
"notebooks/*.py" = ["E402", "F401", "F841", "E703"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
markers = [
    "benchmark: marks tests as benchmark/performance tests (deselect with '-m \"not benchmark\"')",
]

